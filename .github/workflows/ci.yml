name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Install backend dependencies
        run: pip install -r backend/requirements.txt
      - name: Lint backend (flake8)
        run: flake8 backend/ tests/
      - name: Check backend formatting (black)
        run: black --check backend/ tests/
      - name: Run security scan (bandit)
        run: |
          pip install bandit
          bandit -r backend/ -ll
      - name: Run backend tests with coverage
        run: |
          pytest --cov=backend --cov-report=xml --cov-fail-under=80
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage
          path: coverage.xml

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/my-app/apps/web
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend/my-app/apps/web/package-lock.json'
      - name: Install frontend dependencies
        run: npm ci
      - name: Lint frontend
        run: npm run lint
      - name: Check frontend formatting
        run: npm run format
      - name: Type check frontend
        run: npm run type-check
      - name: Check i18n completeness
        run: npm run i18n:check
      - name: Run accessibility checks
        run: |
          npm install -g pa11y-ci
          pa11y-ci
      - name: Run frontend tests with coverage
        run: npm test -- --coverage --coverageThreshold='{"global":{"branches":70,"functions":70,"lines":70,"statements":70}}'
      - name: Build frontend
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: ./frontend/my-app/apps/web/.next

  security:
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run dependency vulnerability scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
      - name: Run SAST scan
        uses: github/codeql-action/analyze@v2
        with:
          languages: ['javascript', 'python']
          queries: security-and-quality

  notify:
    needs: [backend, frontend, security]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() 